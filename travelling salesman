{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "edbfbb8b-8c4f-47de-8ff7-35a4df040fee",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best Path: (0, 1, 3, 2)\n",
      "Min Distance: 20\n"
     ]
    }
   ],
   "source": [
    "import itertools\n",
    "\n",
    "def distance(city1, city2):\n",
    "    return abs(city1[0] - city2[0]) + abs(city1[1] - city2[1])\n",
    "\n",
    "def total_distance(path, cities):\n",
    "    total = 0\n",
    "    for i in range(len(path) - 1):\n",
    "        total += distance(cities[path[i]], cities[path[i + 1]])\n",
    "    total += distance(cities[path[-1]], cities[path[0]])  # Return to starting city\n",
    "    return total\n",
    "\n",
    "def brute_force_tsp(cities):\n",
    "    num_cities = len(cities)\n",
    "    min_distance = float('inf')\n",
    "    best_path = []\n",
    "\n",
    "    for path in itertools.permutations(range(num_cities)):\n",
    "        d = total_distance(path, cities)\n",
    "        if d < min_distance:\n",
    "            min_distance = d\n",
    "            best_path = path\n",
    "\n",
    "    return best_path, min_distance\n",
    "\n",
    "# Example usage\n",
    "cities = [(0, 0), (1, 3), (4, 2), (3, 6)]\n",
    "best_path, min_distance = brute_force_tsp(cities)\n",
    "print(\"Best Path:\", best_path)\n",
    "print(\"Min Distance:\", min_distance)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f8ecfc7c-7128-42a5-94e9-a96e97b968fb",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
